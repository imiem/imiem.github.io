<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh"><generator uri="https://jekyllrb.com/" version="3.8.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="zh" /><updated>2018-04-25T14:47:16+08:00</updated><id>http://localhost:4000/</id><title type="html">imiem’s blog</title><subtitle>imiem's blog
</subtitle><author><name>imiem</name></author><entry><title type="html">centos7 安装和配置 rabbitmq</title><link href="http://localhost:4000/centos7/2017/05/27/CentOS7-RabbitMQ.html" rel="alternate" type="text/html" title="centos7 安装和配置 rabbitmq" /><published>2017-05-27T19:06:05+08:00</published><updated>2017-05-27T19:06:05+08:00</updated><id>http://localhost:4000/centos7/2017/05/27/CentOS7-RabbitMQ</id><content type="html" xml:base="http://localhost:4000/centos7/2017/05/27/CentOS7-RabbitMQ.html">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#安装-erlang&quot; id=&quot;markdown-toc-安装-erlang&quot;&gt;安装 erlang&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#安装-rabbitmq-server&quot; id=&quot;markdown-toc-安装-rabbitmq-server&quot;&gt;安装 rabbitmq server&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#启动&quot; id=&quot;markdown-toc-启动&quot;&gt;启动&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#安装-web-管理页面&quot; id=&quot;markdown-toc-安装-web-管理页面&quot;&gt;安装 web 管理页面&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#用户管理&quot; id=&quot;markdown-toc-用户管理&quot;&gt;用户管理&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#用户角色&quot; id=&quot;markdown-toc-用户角色&quot;&gt;用户角色&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在 **centos 7 上安装和配置 rabbitmq。&lt;a href=&quot;!http://www.rabbitmq.com/install-rpm.html&quot;&gt;官方文档&lt;/a&gt;有更加详细的配置&lt;/p&gt;

&lt;h2 id=&quot;安装-erlang&quot;&gt;安装 erlang&lt;/h2&gt;

&lt;p&gt;rabbitmq 需要有 erlang 的环境，如果使用 yum 安装，执行下面的命令&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; su -c 'rpm -Uvh http://download.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-9.noarch.rpm'
 su -c 'yum install foo’
 yum install erlang
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;执行完成后可以使用 erlang 进行检查是否安装成功。&lt;/p&gt;

&lt;h2 id=&quot;安装-rabbitmq-server&quot;&gt;安装 rabbitmq server&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rpm --import https://www.rabbitmq.com/rabbitmq-release-signing-key.asc
yum install rabbitmq-server-3.6.10-1.noarch.rpm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;启动&quot;&gt;启动&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;设置开机启动
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chkconfig rabbitmq-server on
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;启动
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;service rabbitmq-server start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;停止
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;service rabbitmq-server stop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;安装-web-管理页面&quot;&gt;安装 web 管理页面&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rabbitmq-plugins enable rabbitmq_management
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;安装完成后就可以使用 http://ip:15672进行访问了，web 页面需要用户，所以下边就需要对用户进行配置&lt;/p&gt;

&lt;h2 id=&quot;用户管理&quot;&gt;用户管理&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;用户列表
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rabbitmqctl  list_users
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;新增用户
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rabbitmqctl  add_user  Username  Password
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;删除用户
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rabbitmqctl  delete_user  Username
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;修改密码
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rabbitmqctl  change_password  Username  Newpassword
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;用户添加完成后还不能登录 web 页面，还需要给用户添加角色&lt;/p&gt;

&lt;h2 id=&quot;用户角色&quot;&gt;用户角色&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;超级管理员(administrator)&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; 可登陆管理控制台(启用management plugin的情况下)，可查看所有的信息，并且可以对用户，策略(policy)进行操作。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;监控者(monitoring)&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; 可登陆管理控制台(启用management plugin的情况下)，同时可以查看rabbitmq节点的相关信息(进程数，内存使用情况，磁盘使用情况等)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;策略制定者(policymaker)&lt;/p&gt;

    &lt;p&gt;可登陆管理控制台(启用management plugin的情况下), 同时可以对policy进行管理。但无法查看节点的相关信息。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;普通管理者(management)&lt;/p&gt;

    &lt;p&gt;仅可登陆管理控制台(启用management plugin的情况下)，无法看到节点信息，也无法对策略进行管理。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;其他&lt;/p&gt;

    &lt;p&gt;无法登陆管理控制台，通常就是普通的生产者和消费者。
  了解了这些后，就可以根据需要给不同的用户设置不同的角色，以便按需管理。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;赋予用户角色&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rabbitmqctl  set_user_tags  User  Tag
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;一个用户可以有多个角色，多个 tag 使用空格分开即可&lt;/p&gt;</content><author><name>imiem</name></author><category term="centos7" /><category term="rabbitmq" /><summary type="html">安装 erlang 安装 rabbitmq server 启动 安装 web 管理页面 用户管理 用户角色 在 **centos 7 上安装和配置 rabbitmq。官方文档有更加详细的配置 安装 erlang rabbitmq 需要有 erlang 的环境，如果使用 yum 安装，执行下面的命令 su -c 'rpm -Uvh http://download.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-9.noarch.rpm' su -c 'yum install foo’ yum install erlang 执行完成后可以使用 erlang 进行检查是否安装成功。 安装 rabbitmq server rpm --import https://www.rabbitmq.com/rabbitmq-release-signing-key.asc yum install rabbitmq-server-3.6.10-1.noarch.rpm 启动 设置开机启动 chkconfig rabbitmq-server on 启动 service rabbitmq-server start 停止 service rabbitmq-server stop 安装 web 管理页面 rabbitmq-plugins enable rabbitmq_management 安装完成后就可以使用 http://ip:15672进行访问了，web 页面需要用户，所以下边就需要对用户进行配置 用户管理 用户列表 rabbitmqctl list_users 新增用户 rabbitmqctl add_user Username Password 删除用户 rabbitmqctl delete_user Username 修改密码 rabbitmqctl change_password Username Newpassword 用户添加完成后还不能登录 web 页面，还需要给用户添加角色 用户角色 超级管理员(administrator) 可登陆管理控制台(启用management plugin的情况下)，可查看所有的信息，并且可以对用户，策略(policy)进行操作。 监控者(monitoring) 可登陆管理控制台(启用management plugin的情况下)，同时可以查看rabbitmq节点的相关信息(进程数，内存使用情况，磁盘使用情况等) 策略制定者(policymaker) 可登陆管理控制台(启用management plugin的情况下), 同时可以对policy进行管理。但无法查看节点的相关信息。 普通管理者(management) 仅可登陆管理控制台(启用management plugin的情况下)，无法看到节点信息，也无法对策略进行管理。 其他 无法登陆管理控制台，通常就是普通的生产者和消费者。 了解了这些后，就可以根据需要给不同的用户设置不同的角色，以便按需管理。 赋予用户角色 rabbitmqctl set_user_tags User Tag 一个用户可以有多个角色，多个 tag 使用空格分开即可</summary></entry><entry><title type="html">GeoHash实现周边推荐</title><link href="http://localhost:4000/java/2017/03/31/LBS-GeoHash.html" rel="alternate" type="text/html" title="GeoHash实现周边推荐" /><published>2017-03-31T21:06:05+08:00</published><updated>2017-03-31T21:06:05+08:00</updated><id>http://localhost:4000/java/2017/03/31/LBS-GeoHash</id><content type="html" xml:base="http://localhost:4000/java/2017/03/31/LBS-GeoHash.html">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#geohash基础&quot; id=&quot;markdown-toc-geohash基础&quot;&gt;GeoHash基础&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#geohash转换过程&quot; id=&quot;markdown-toc-geohash转换过程&quot;&gt;GeoHash转换过程&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#转换&quot; id=&quot;markdown-toc-转换&quot;&gt;转换&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#合并&quot; id=&quot;markdown-toc-合并&quot;&gt;合并&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#误差&quot; id=&quot;markdown-toc-误差&quot;&gt;误差&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#java实现代码&quot; id=&quot;markdown-toc-java实现代码&quot;&gt;Java实现代码&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#参考内容&quot; id=&quot;markdown-toc-参考内容&quot;&gt;参考内容&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;旅游，外卖等需要定位的项目中一般会有周边推荐的需求，如推荐出周边五公里的景点。目前实现的算法也有很多，这里简单的说下GeoHash的实现原理以及Java的实现代码。&lt;/p&gt;

&lt;h2 id=&quot;geohash基础&quot;&gt;GeoHash基础&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;GeoHash使用一个字符串来表示经度和纬度。这样在做周边搜索的时候可以在一列上加索引。&lt;/li&gt;
  &lt;li&gt;GeoHash表示的不是一个点，而是一个矩形区域。&lt;/li&gt;
  &lt;li&gt;精度范围为(-180,180),纬度范围为(-90,90)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;geohash转换过程&quot;&gt;GeoHash转换过程&lt;/h2&gt;

&lt;h3 id=&quot;转换&quot;&gt;转换&lt;/h3&gt;

&lt;p&gt;GeoHash就是将经纬度信息，转换为可以排序、比较的字符串编码。
首先将纬度范围(-90,90)分为两个区间(-90,0),(0,90),如果目标纬度在前一个区间，编码为0，否则编码为1。以此类推，直到精度符合要求为止。&lt;/p&gt;

&lt;p&gt;给出一个经纬度(39.92324,116.3906)，转换过程如下&lt;/p&gt;

&lt;table boder=&quot;1px&quot; cellspacing=&quot;0px&quot; style=&quot;width:100%&quot;&gt;
	&lt;tr&gt;
		&lt;td&gt;纬度范围&lt;/td&gt;
		&lt;td&gt;划分区间0&lt;/td&gt;
		&lt;td&gt;划分区间1&lt;/td&gt;
		&lt;td&gt;39.92324所属区间&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;(-90, 90)&lt;/td&gt;
		&lt;td&gt;(-90, 0.0)&lt;/td&gt;
		&lt;td&gt;(0.0, 90)&lt;/td&gt;
		&lt;td&gt;1&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;(0.0, 90)&lt;/td&gt;
		&lt;td&gt;(0.0, 45.0)&lt;/td&gt;
		&lt;td&gt;(45.0, 90)&lt;/td&gt;
		&lt;td&gt;0&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;(0.0, 45.0)&lt;/td&gt;
		&lt;td&gt;(0.0, 22.5)&lt;/td&gt;
		&lt;td&gt;(22.5, 45.0)&lt;/td&gt;
		&lt;td&gt;1&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;(22.5, 45.0)&lt;/td&gt;
		&lt;td&gt;(22.5, 33.75)&lt;/td&gt;
		&lt;td&gt;(33.75, 45.0)&lt;/td&gt;
		&lt;td&gt;1&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;(33.75, 45.0)&lt;/td&gt;
		&lt;td&gt;(33.75, 39.375)&lt;/td&gt;
		&lt;td&gt;(39.375, 45.0)&lt;/td&gt;
		&lt;td&gt;1&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;(39.375, 45.0)&lt;/td&gt;
		&lt;td&gt;(39.375, 42.1875)&lt;/td&gt;
		&lt;td&gt;(42.1875, 45.0)&lt;/td&gt;
		&lt;td&gt;0&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;(39.375, 42.1875)&lt;/td&gt;
		&lt;td&gt;(39.375, 40.7812)&lt;/td&gt;
		&lt;td&gt;(40.7812, 42.1875)&lt;/td&gt;
		&lt;td&gt;0&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;(39.375, 40.7812)&lt;/td&gt;
		&lt;td&gt;(39.375, 40.0781)&lt;/td&gt;
		&lt;td&gt;(40.0781, 40.7812)&lt;/td&gt;
		&lt;td&gt;0&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;(39.375, 40.0781)&lt;/td&gt;
		&lt;td&gt;(39.375, 39.7265)&lt;/td&gt;
		&lt;td&gt;(39.7265, 40.0781)&lt;/td&gt;
		&lt;td&gt;1&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;(39.7265, 40.0781)&lt;/td&gt;
		&lt;td&gt;(39.7265, 39.9023)&lt;/td&gt;
		&lt;td&gt;(39.9023, 40.0781)&lt;/td&gt;
		&lt;td&gt;1&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;(39.9023, 40.0781)&lt;/td&gt;
		&lt;td&gt;(39.9023, 39.9902)&lt;/td&gt;
		&lt;td&gt;(39.9902, 40.0781)&lt;/td&gt;
		&lt;td&gt;0&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;(39.9023, 39.9902)&lt;/td&gt;
		&lt;td&gt;(39.9023, 39.9462)&lt;/td&gt;
		&lt;td&gt;(39.9462, 39.9902)&lt;/td&gt;
		&lt;td&gt;0&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;(39.9023, 39.9462)&lt;/td&gt;
		&lt;td&gt;(39.9023, 39.9243)&lt;/td&gt;
		&lt;td&gt;(39.9243, 39.9462)&lt;/td&gt;
		&lt;td&gt;0&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;(39.9023, 39.9243)&lt;/td&gt;
		&lt;td&gt;(39.9023, 39.9133)&lt;/td&gt;
		&lt;td&gt;(39.9133, 39.9243)&lt;/td&gt;
		&lt;td&gt;1&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;(39.9133, 39.9243)&lt;/td&gt;
		&lt;td&gt;(39.9133, 39.9188)&lt;/td&gt;
		&lt;td&gt;(39.9188, 39.9243)&lt;/td&gt;
		&lt;td&gt;1&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;(39.9188, 39.9243)&lt;/td&gt;
		&lt;td&gt;(39.9188, 39.9215)&lt;/td&gt;
		&lt;td&gt;(39.9215, 39.9243)&lt;/td&gt;
		&lt;td&gt;1&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;(39.9215, 39.9243)&lt;/td&gt;
		&lt;td&gt;(39.9215, 39.9229)&lt;/td&gt;
		&lt;td&gt;(39.9229, 39.9243)&lt;/td&gt;
		&lt;td&gt;1&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;(39.9229, 39.9243)&lt;/td&gt;
		&lt;td&gt;(39.9229, 39.9236)&lt;/td&gt;
		&lt;td&gt;(39.9236, 39.9243)&lt;/td&gt;
		&lt;td&gt;0&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;(39.9229, 39.9236)&lt;/td&gt;
		&lt;td&gt;(39.9229, 39.92325)&lt;/td&gt;
		&lt;td&gt;(39.92325, 39.9236)&lt;/td&gt;
		&lt;td&gt;0&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;(39.9229, 39.92325)&lt;/td&gt;
		&lt;td&gt;(39.9229, 39.923075)&lt;/td&gt;
		&lt;td&gt;(39.923075, 39.92325)&lt;/td&gt;
		&lt;td&gt;1&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;因此可以得到纬度的编码为 1011 1000 1100 0111 1001
经度也用同样的算法，对(-180, 180)依次细分，得到116.3906的编码为1101 0010 1100 0100 0100。
接下来将经度和纬度的编码合并，奇数位是纬度，偶数位是经度，得到编码 11100 11101 00100 01111 00000 01101 01011 00001。&lt;/p&gt;

&lt;h3 id=&quot;合并&quot;&gt;合并&lt;/h3&gt;

&lt;p&gt;将 11100 11101 00100 01111 00000 01101 01011 00001转化为对应的十进制为 28 29 4 15 0 13 11 1&lt;/p&gt;

&lt;p&gt;用0-9、b-z（去掉a, i, l, o）这32个字母进行base32编码&lt;/p&gt;
&lt;table boder=&quot;1px&quot; cellspacing=&quot;0px&quot; style=&quot;width:100%&quot;&gt;
	
	&lt;tr&gt;
		&lt;td&gt;十进制&lt;/td&gt;
		&lt;td&gt;0&lt;/td&gt;
		&lt;td&gt;1&lt;/td&gt;
		&lt;td&gt;2&lt;/td&gt;
		&lt;td&gt;3&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;5&lt;/td&gt;
		&lt;td&gt;6&lt;/td&gt;
		&lt;td&gt;7&lt;/td&gt;
		&lt;td&gt;8&lt;/td&gt;
		&lt;td&gt;9&lt;/td&gt;
		&lt;td&gt;10&lt;/td&gt;
		&lt;td&gt;11&lt;/td&gt;
		&lt;td&gt;12&lt;/td&gt;
		&lt;td&gt;13&lt;/td&gt;
		&lt;td&gt;14&lt;/td&gt;
		&lt;td&gt;15&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;base32&lt;/td&gt;
		&lt;td&gt;0&lt;/td&gt;
		&lt;td&gt;1&lt;/td&gt;
		&lt;td&gt;2&lt;/td&gt;
		&lt;td&gt;3&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;5&lt;/td&gt;
		&lt;td&gt;6&lt;/td&gt;
		&lt;td&gt;7&lt;/td&gt;
		&lt;td&gt;8&lt;/td&gt;
		&lt;td&gt;9&lt;/td&gt;
		&lt;td&gt;b&lt;/td&gt;
		&lt;td&gt;c&lt;/td&gt;
		&lt;td&gt;d&lt;/td&gt;
		&lt;td&gt;e&lt;/td&gt;
		&lt;td&gt;f&lt;/td&gt;
		&lt;td&gt;g&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;十进制&lt;/td&gt;
		&lt;td&gt;16&lt;/td&gt;
		&lt;td&gt;17&lt;/td&gt;
		&lt;td&gt;18&lt;/td&gt;
		&lt;td&gt;19&lt;/td&gt;
		&lt;td&gt;20&lt;/td&gt;
		&lt;td&gt;21&lt;/td&gt;
		&lt;td&gt;22&lt;/td&gt;
		&lt;td&gt;23&lt;/td&gt;
		&lt;td&gt;24&lt;/td&gt;
		&lt;td&gt;25&lt;/td&gt;
		&lt;td&gt;26&lt;/td&gt;
		&lt;td&gt;27&lt;/td&gt;
		&lt;td&gt;28&lt;/td&gt;
		&lt;td&gt;29&lt;/td&gt;
		&lt;td&gt;30&lt;/td&gt;
		&lt;td&gt;31&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;base32&lt;/td&gt;
		&lt;td&gt;h&lt;/td&gt;
		&lt;td&gt;j&lt;/td&gt;
		&lt;td&gt;k&lt;/td&gt;
		&lt;td&gt;m&lt;/td&gt;
		&lt;td&gt;n&lt;/td&gt;
		&lt;td&gt;p&lt;/td&gt;
		&lt;td&gt;q&lt;/td&gt;
		&lt;td&gt;r&lt;/td&gt;
		&lt;td&gt;s&lt;/td&gt;
		&lt;td&gt;t&lt;/td&gt;
		&lt;td&gt;u&lt;/td&gt;
		&lt;td&gt;v&lt;/td&gt;
		&lt;td&gt;w&lt;/td&gt;
		&lt;td&gt;x&lt;/td&gt;
		&lt;td&gt;y&lt;/td&gt;
		&lt;td&gt;z&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;可以得到(39.92324, 116.3906)的编码为wx4g0ec1&lt;/p&gt;

&lt;h2 id=&quot;误差&quot;&gt;误差&lt;/h2&gt;

&lt;p&gt;下表列出了不同的编码长度对应的精度：&lt;/p&gt;
&lt;table boder=&quot;1px&quot; cellspacing=&quot;0px&quot; style=&quot;width:100%&quot;&gt;
	&lt;tr&gt;
		&lt;td&gt;geohash length&lt;/td&gt;
		&lt;td&gt;lat bits&lt;/td&gt;
		&lt;td&gt;lng bits&lt;/td&gt;
		&lt;td&gt;lat error&lt;/td&gt;
		&lt;td&gt;lng error&lt;/td&gt;
		&lt;td&gt;km error&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;1&lt;/td&gt;
		&lt;td&gt;2&lt;/td&gt;
		&lt;td&gt;3&lt;/td&gt;
		&lt;td&gt;±23&lt;/td&gt;
		&lt;td&gt;±23&lt;/td&gt;
		&lt;td&gt;±2500&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;2&lt;/td&gt;
		&lt;td&gt;5&lt;/td&gt;
		&lt;td&gt;5&lt;/td&gt;
		&lt;td&gt;±2.8&lt;/td&gt;
		&lt;td&gt;±5.6&lt;/td&gt;
		&lt;td&gt;±630&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;3&lt;/td&gt;
		&lt;td&gt;7&lt;/td&gt;
		&lt;td&gt;8&lt;/td&gt;
		&lt;td&gt;±0.70&lt;/td&gt;
		&lt;td&gt;±0.7&lt;/td&gt;
		&lt;td&gt;±78&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;10&lt;/td&gt;
		&lt;td&gt;10&lt;/td&gt;
		&lt;td&gt;±0.087&lt;/td&gt;
		&lt;td&gt;±0.18&lt;/td&gt;
		&lt;td&gt;±20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;5&lt;/td&gt;
		&lt;td&gt;12&lt;/td&gt;
		&lt;td&gt;13&lt;/td&gt;
		&lt;td&gt;±0.022&lt;/td&gt;
		&lt;td&gt;±0.022&lt;/td&gt;
		&lt;td&gt;±2.4&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;6&lt;/td&gt;
		&lt;td&gt;15&lt;/td&gt;
		&lt;td&gt;15&lt;/td&gt;
		&lt;td&gt;±0.0027&lt;/td&gt;
		&lt;td&gt;±0.0055&lt;/td&gt;
		&lt;td&gt;±0.61&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;7&lt;/td&gt;
		&lt;td&gt;17&lt;/td&gt;
		&lt;td&gt;18&lt;/td&gt;
		&lt;td&gt;±0.00068&lt;/td&gt;
		&lt;td&gt;±0.0068&lt;/td&gt;
		&lt;td&gt;±0.076&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;8&lt;/td&gt;
		&lt;td&gt;20&lt;/td&gt;
		&lt;td&gt;20&lt;/td&gt;
		&lt;td&gt;±0.000085&lt;/td&gt;
		&lt;td&gt;±0.00017&lt;/td&gt;
		&lt;td&gt;±0.019&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;

&lt;table boder=&quot;1px&quot; cellspacing=&quot;0px&quot; style=&quot;width:100%&quot;&gt;
	&lt;tr&gt;
		&lt;td&gt;geohash length&lt;/td&gt;
		&lt;td&gt;width&lt;/td&gt;
		&lt;td&gt;height&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;1&lt;/td&gt;
		&lt;td&gt;5009.4km&lt;/td&gt;
		&lt;td&gt;4992.6km&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;2&lt;/td&gt;
		&lt;td&gt;1252.3km&lt;/td&gt;
		&lt;td&gt;624.1km&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;3&lt;/td&gt;
		&lt;td&gt;156.5km&lt;/td&gt;
		&lt;td&gt;156km&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;39.1km&lt;/td&gt;
		&lt;td&gt;19.5km&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;5&lt;/td&gt;
		&lt;td&gt;4.9km&lt;/td&gt;
		&lt;td&gt;4.9km&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;6&lt;/td&gt;
		&lt;td&gt;1.2km&lt;/td&gt;
		&lt;td&gt;609.4m&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;7&lt;/td&gt;
		&lt;td&gt;152.9m&lt;/td&gt;
		&lt;td&gt;152.4m&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;8&lt;/td&gt;
		&lt;td&gt;38.2m&lt;/td&gt;
		&lt;td&gt;19m&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;9&lt;/td&gt;
		&lt;td&gt;4.8m&lt;/td&gt;
		&lt;td&gt;4.8m&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;10&lt;/td&gt;
		&lt;td&gt;1.2m&lt;/td&gt;
		&lt;td&gt;59.5m&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;11&lt;/td&gt;
		&lt;td&gt;14.9cm&lt;/td&gt;
		&lt;td&gt;14.9cm&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;12&lt;/td&gt;
		&lt;td&gt;3.7cm&lt;/td&gt;
		&lt;td&gt;1.9cm&lt;/td&gt;
	&lt;/tr&gt;

&lt;/table&gt;

&lt;h2 id=&quot;java实现代码&quot;&gt;Java实现代码&lt;/h2&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.BitSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  
  
  
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GeoHash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;  
  
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;digits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'1'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'2'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'3'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'4'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'5'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'6'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'7'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'8'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;  
            &lt;span class=&quot;sc&quot;&gt;'9'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'b'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'c'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'d'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'e'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'f'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'g'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'h'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'j'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'k'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'m'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'n'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'p'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;  
            &lt;span class=&quot;sc&quot;&gt;'q'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'s'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'t'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'u'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'v'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'w'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'x'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'y'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'z'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;  
      
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Character&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lookup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Character&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt;  
    &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;  
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;digits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  
            &lt;span class=&quot;n&quot;&gt;lookup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++);&lt;/span&gt;  
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;  

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;geohash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;  
        &lt;span class=&quot;n&quot;&gt;StringBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;  
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;geohash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toCharArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;  
  
            &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lookup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  
            &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;  
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;  
          
        &lt;span class=&quot;n&quot;&gt;BitSet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lonset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BitSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;  
        &lt;span class=&quot;n&quot;&gt;BitSet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;latset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BitSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;  
          
        &lt;span class=&quot;c1&quot;&gt;//even bits  &lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;  
            &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isSet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  
              &lt;span class=&quot;n&quot;&gt;isSet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'1'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  
            &lt;span class=&quot;n&quot;&gt;lonset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;  
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;  
          
        &lt;span class=&quot;c1&quot;&gt;//odd bits  &lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;  
            &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isSet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  
              &lt;span class=&quot;n&quot;&gt;isSet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'1'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  
            &lt;span class=&quot;n&quot;&gt;latset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;  
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;  
          
        &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lon&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lonset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;180&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;180&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;  
        &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;latset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;  
          
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;       
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;  
      
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BitSet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ceiling&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;  
        &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;  
            &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;floor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ceiling&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;  
                &lt;span class=&quot;n&quot;&gt;floor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;  
                &lt;span class=&quot;n&quot;&gt;ceiling&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;  
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;  
      
      
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;  
        &lt;span class=&quot;n&quot;&gt;BitSet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;latbits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getBits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;  
        &lt;span class=&quot;n&quot;&gt;BitSet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lonbits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getBits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;180&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;180&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;  
        &lt;span class=&quot;n&quot;&gt;StringBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;  
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;  
            &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lonbits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))?&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'1'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;  
            &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;latbits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))?&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'1'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;  
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;  
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;base32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseLong&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;  
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;  
  
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BitSet&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getBits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ceiling&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;  
        &lt;span class=&quot;n&quot;&gt;BitSet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BitSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numbits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;  
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;  
            &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;floor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ceiling&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;  
                &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;  
                &lt;span class=&quot;n&quot;&gt;floor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;  
                &lt;span class=&quot;n&quot;&gt;ceiling&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;  
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;  
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;  
  
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;base32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;  
        &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;65&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;  
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;charPos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  
        &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;negative&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;  
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;negative&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  
            &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;  
            &lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;charPos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;digits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(-(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))];&lt;/span&gt;  
            &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;  
        &lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;charPos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;digits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)];&lt;/span&gt;  
  
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;negative&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  
            &lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;charPos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'-'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;charPos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;65&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;charPos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;  
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;  
  
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;参考内容&quot;&gt;参考内容&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/dengxinglin/archive/2012/12/14/2817761.html&quot;&gt;http://www.cnblogs.com/dengxinglin/archive/2012/12/14/2817761.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/xiaojimanman/article/details/50358506&quot;&gt;http://blog.csdn.net/xiaojimanman/article/details/50358506&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>imiem</name></author><category term="LBS" /><category term="GeoHash" /><summary type="html">GeoHash基础 GeoHash转换过程 转换 合并 误差 Java实现代码 参考内容 旅游，外卖等需要定位的项目中一般会有周边推荐的需求，如推荐出周边五公里的景点。目前实现的算法也有很多，这里简单的说下GeoHash的实现原理以及Java的实现代码。 GeoHash基础 GeoHash使用一个字符串来表示经度和纬度。这样在做周边搜索的时候可以在一列上加索引。 GeoHash表示的不是一个点，而是一个矩形区域。 精度范围为(-180,180),纬度范围为(-90,90) GeoHash转换过程 转换 GeoHash就是将经纬度信息，转换为可以排序、比较的字符串编码。 首先将纬度范围(-90,90)分为两个区间(-90,0),(0,90),如果目标纬度在前一个区间，编码为0，否则编码为1。以此类推，直到精度符合要求为止。 给出一个经纬度(39.92324,116.3906)，转换过程如下 纬度范围 划分区间0 划分区间1 39.92324所属区间 (-90, 90) (-90, 0.0) (0.0, 90) 1 (0.0, 90) (0.0, 45.0) (45.0, 90) 0 (0.0, 45.0) (0.0, 22.5) (22.5, 45.0) 1 (22.5, 45.0) (22.5, 33.75) (33.75, 45.0) 1 (33.75, 45.0) (33.75, 39.375) (39.375, 45.0) 1 (39.375, 45.0) (39.375, 42.1875) (42.1875, 45.0) 0 (39.375, 42.1875) (39.375, 40.7812) (40.7812, 42.1875) 0 (39.375, 40.7812) (39.375, 40.0781) (40.0781, 40.7812) 0 (39.375, 40.0781) (39.375, 39.7265) (39.7265, 40.0781) 1 (39.7265, 40.0781) (39.7265, 39.9023) (39.9023, 40.0781) 1 (39.9023, 40.0781) (39.9023, 39.9902) (39.9902, 40.0781) 0 (39.9023, 39.9902) (39.9023, 39.9462) (39.9462, 39.9902) 0 (39.9023, 39.9462) (39.9023, 39.9243) (39.9243, 39.9462) 0 (39.9023, 39.9243) (39.9023, 39.9133) (39.9133, 39.9243) 1 (39.9133, 39.9243) (39.9133, 39.9188) (39.9188, 39.9243) 1 (39.9188, 39.9243) (39.9188, 39.9215) (39.9215, 39.9243) 1 (39.9215, 39.9243) (39.9215, 39.9229) (39.9229, 39.9243) 1 (39.9229, 39.9243) (39.9229, 39.9236) (39.9236, 39.9243) 0 (39.9229, 39.9236) (39.9229, 39.92325) (39.92325, 39.9236) 0 (39.9229, 39.92325) (39.9229, 39.923075) (39.923075, 39.92325) 1 因此可以得到纬度的编码为 1011 1000 1100 0111 1001 经度也用同样的算法，对(-180, 180)依次细分，得到116.3906的编码为1101 0010 1100 0100 0100。 接下来将经度和纬度的编码合并，奇数位是纬度，偶数位是经度，得到编码 11100 11101 00100 01111 00000 01101 01011 00001。 合并 将 11100 11101 00100 01111 00000 01101 01011 00001转化为对应的十进制为 28 29 4 15 0 13 11 1 用0-9、b-z（去掉a, i, l, o）这32个字母进行base32编码 十进制 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 base32 0 1 2 3 4 5 6 7 8 9 b c d e f g 十进制 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 base32 h j k m n p q r s t u v w x y z 可以得到(39.92324, 116.3906)的编码为wx4g0ec1 误差 下表列出了不同的编码长度对应的精度： geohash length lat bits lng bits lat error lng error km error 1 2 3 ±23 ±23 ±2500 2 5 5 ±2.8 ±5.6 ±630 3 7 8 ±0.70 ±0.7 ±78 4 10 10 ±0.087 ±0.18 ±20 5 12 13 ±0.022 ±0.022 ±2.4 6 15 15 ±0.0027 ±0.0055 ±0.61 7 17 18 ±0.00068 ±0.0068 ±0.076 8 20 20 ±0.000085 ±0.00017 ±0.019 geohash length width height 1 5009.4km 4992.6km 2 1252.3km 624.1km 3 156.5km 156km 4 39.1km 19.5km 5 4.9km 4.9km 6 1.2km 609.4m 7 152.9m 152.4m 8 38.2m 19m 9 4.8m 4.8m 10 1.2m 59.5m 11 14.9cm 14.9cm 12 3.7cm 1.9cm Java实现代码 import java.util.BitSet; import java.util.HashMap; public class GeoHash { private static int numbits = 6 * 5; final static char[] digits = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'j', 'k', 'm', 'n', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z' }; final static HashMap&amp;lt;Character, Integer&amp;gt; lookup = new HashMap&amp;lt;Character, Integer&amp;gt;(); static { int i = 0; for (char c : digits) lookup.put(c, i++); } public double[] decode(String geohash) { StringBuilder buffer = new StringBuilder(); for (char c : geohash.toCharArray()) { int i = lookup.get(c) + 32; buffer.append( Integer.toString(i, 2).substring(1) ); } BitSet lonset = new BitSet(); BitSet latset = new BitSet(); //even bits int j =0; for (int i=0; i&amp;lt; numbits*2;i+=2) { boolean isSet = false; if ( i &amp;lt; buffer.length() ) isSet = buffer.charAt(i) == '1'; lonset.set(j++, isSet); } //odd bits j=0; for (int i=1; i&amp;lt; numbits*2;i+=2) { boolean isSet = false; if ( i &amp;lt; buffer.length() ) isSet = buffer.charAt(i) == '1'; latset.set(j++, isSet); } double lon = decode(lonset, -180, 180); double lat = decode(latset, -90, 90); return new double[] {lat, lon}; } private double decode(BitSet bs, double floor, double ceiling) { double mid = 0; for (int i=0; i&amp;lt;bs.length(); i++) { mid = (floor + ceiling) / 2; if (bs.get(i)) floor = mid; else ceiling = mid; } return mid; } public String encode(double lat, double lon) { BitSet latbits = getBits(lat, -90, 90); BitSet lonbits = getBits(lon, -180, 180); StringBuilder buffer = new StringBuilder(); for (int i = 0; i &amp;lt; numbits; i++) { buffer.append( (lonbits.get(i))?'1':'0'); buffer.append( (latbits.get(i))?'1':'0'); } return base32(Long.parseLong(buffer.toString(), 2)); } private BitSet getBits(double lat, double floor, double ceiling) { BitSet buffer = new BitSet(numbits); for (int i = 0; i &amp;lt; numbits; i++) { double mid = (floor + ceiling) / 2; if (lat &amp;gt;= mid) { buffer.set(i); floor = mid; } else { ceiling = mid; } } return buffer; } public static String base32(long i) { char[] buf = new char[65]; int charPos = 64; boolean negative = (i &amp;lt; 0); if (!negative) i = -i; while (i &amp;lt;= -32) { buf[charPos--] = digits[(int) (-(i % 32))]; i /= 32; } buf[charPos] = digits[(int) (-i)]; if (negative) buf[--charPos] = '-'; return new String(buf, charPos, (65 - charPos)); } } 参考内容 http://www.cnblogs.com/dengxinglin/archive/2012/12/14/2817761.html http://blog.csdn.net/xiaojimanman/article/details/50358506</summary></entry><entry><title type="html">springboot redis实现session共享</title><link href="http://localhost:4000/java/2017/03/06/SpringBoot-Redis-Session.html" rel="alternate" type="text/html" title="springboot redis实现session共享" /><published>2017-03-06T02:06:05+08:00</published><updated>2017-03-06T02:06:05+08:00</updated><id>http://localhost:4000/java/2017/03/06/SpringBoot-Redis-Session</id><content type="html" xml:base="http://localhost:4000/java/2017/03/06/SpringBoot-Redis-Session.html">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#工具&quot; id=&quot;markdown-toc-工具&quot;&gt;工具&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#模拟分布式&quot; id=&quot;markdown-toc-模拟分布式&quot;&gt;模拟分布式&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#创建一个springboot项目&quot; id=&quot;markdown-toc-创建一个springboot项目&quot;&gt;创建一个springboot项目&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#配置redis和访问的端口&quot; id=&quot;markdown-toc-配置redis和访问的端口&quot;&gt;配置redis和访问的端口&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#配置redis缓存session&quot; id=&quot;markdown-toc-配置redis缓存session&quot;&gt;配置redis缓存session&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#编写一个测试的控制类&quot; id=&quot;markdown-toc-编写一个测试的控制类&quot;&gt;编写一个测试的控制类&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#测试&quot; id=&quot;markdown-toc-测试&quot;&gt;测试&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#目前缺点&quot; id=&quot;markdown-toc-目前缺点&quot;&gt;目前缺点&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#参考资料&quot; id=&quot;markdown-toc-参考资料&quot;&gt;参考资料&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当创建分布式服务时会出现session共享的问题，即第一次访问的时候负载均衡会将请求分配到server1上，但是当第二次访问的时候，如果请求没有分配到server1上，那么用户的会话状态将丢失。下面给出了一种使用springboot整合redis的共享session的例子。&lt;/p&gt;

&lt;h2 id=&quot;工具&quot;&gt;工具&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;nginx-1.7.10&lt;/li&gt;
  &lt;li&gt;redis-2.8&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;模拟分布式&quot;&gt;模拟分布式&lt;/h2&gt;

&lt;p&gt;使用nginx模拟一个简单的分布式的环境，在nginx.conf中添加&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;upstream  tomcat  {  
        server    127.0.0.1:8088  weight=1;
        server    127.0.0.1:9090  weight=2;  
} 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;修改监听的端口，即所有的访问都通过83进行反向代理&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; server {
        listen       83;
        server_name  localhost;
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;创建一个springboot项目&quot;&gt;创建一个springboot项目&lt;/h2&gt;

&lt;p&gt;在pom文件中加入&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-starter-web&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-starter-data-redis&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.session&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-session-data-redis&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-starter-test&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;test&lt;span class=&quot;nt&quot;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;配置redis和访问的端口&quot;&gt;配置redis和访问的端口&lt;/h2&gt;

&lt;p&gt;在application.properties中添加&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;spring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;localhost&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;spring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16001&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9090&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;配置redis缓存session&quot;&gt;配置redis缓存session&lt;/h2&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Configuration&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@EnableRedisHttpSession&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RedisConfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;编写一个测试的控制类&quot;&gt;编写一个测试的控制类&lt;/h2&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@RestController&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/api/v1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@PropertySource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;classpath:application.properties&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HomeController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${server.port}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/first&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RequestMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;firstResp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRequestURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRequestURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;port&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/sessions&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RequestMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sessions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sessionId&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAttribute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;port&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;测试&quot;&gt;测试&lt;/h2&gt;

&lt;p&gt;复制一份相同的代码，然后区分访问端口为8088和9090&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;访问：http://localhost:83/api/v1/first&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;9090&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://tomcat/api/v1/first&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;多次访问：http://localhost:83/api/v1/sessions&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;9090&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;sessionId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2e35353c-4d9e-4588-8257-43b54da9adc7&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://tomcat/api/v1/first&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;8088&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;sessionId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2e35353c-4d9e-4588-8257-43b54da9adc7&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://tomcat/api/v1/first&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;虽然访问落到不同的服务下，但是每次获取的sessionId是相同的，即达到了session共享的目的。&lt;/p&gt;

&lt;h2 id=&quot;目前缺点&quot;&gt;目前缺点&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;目前nginx的配置，当一个服务挂掉的时候访问依然会落到这个服务商&lt;/li&gt;
  &lt;li&gt;目前的redis没有实现集群管理，当redis挂掉的时候，所有的session都将失效&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;参考资料&quot;&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/MrDebuger/blog_src/tree/master/redis-session&quot;&gt;代码地址&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/mengmeng89012/p/5519698.html&quot;&gt;http://www.cnblogs.com/mengmeng89012/p/5519698.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;可以参考github上的已有的集成方案&lt;a href=&quot;https://github.com/jcoleman/tomcat-redis-session-manager&quot;&gt;https://github.com/jcoleman/tomcat-redis-session-manager&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>imiem</name></author><category term="redis" /><category term="tomcat" /><category term="session" /><summary type="html">工具 模拟分布式 创建一个springboot项目 配置redis和访问的端口 配置redis缓存session 编写一个测试的控制类 测试 目前缺点 参考资料 当创建分布式服务时会出现session共享的问题，即第一次访问的时候负载均衡会将请求分配到server1上，但是当第二次访问的时候，如果请求没有分配到server1上，那么用户的会话状态将丢失。下面给出了一种使用springboot整合redis的共享session的例子。 工具 nginx-1.7.10 redis-2.8 模拟分布式 使用nginx模拟一个简单的分布式的环境，在nginx.conf中添加 upstream tomcat { server 127.0.0.1:8088 weight=1; server 127.0.0.1:9090 weight=2; } 修改监听的端口，即所有的访问都通过83进行反向代理 server { listen 83; server_name localhost; } 创建一个springboot项目 在pom文件中加入 &amp;lt;dependencies&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-web&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-data-redis&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.session&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-session-data-redis&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-test&amp;lt;/artifactId&amp;gt; &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;/dependencies&amp;gt; 配置redis和访问的端口 在application.properties中添加 spring.redis.host=localhost spring.redis.port=16001 server.port=9090 配置redis缓存session @Configuration @EnableRedisHttpSession public class RedisConfig { } 编写一个测试的控制类 @RestController @RequestMapping(value = &quot;/api/v1&quot;) @PropertySource(&quot;classpath:application.properties&quot;) public class HomeController { @Value(&quot;${server.port}&quot;) public String port; @RequestMapping(value = &quot;/first&quot;, method = RequestMethod.GET) public Object firstResp(HttpServletRequest request) { Map&amp;lt;String, Object&amp;gt; map = new HashMap&amp;lt;&amp;gt;(); request.getSession().setAttribute(&quot;url&quot;, request.getRequestURL()); map.put(&quot;url&quot;, request.getRequestURL()); map.put(&quot;port&quot;,port); return map; } @RequestMapping(value = &quot;/sessions&quot;, method = RequestMethod.GET) public Object sessions (HttpServletRequest request){ Map&amp;lt;String, Object&amp;gt; map = new HashMap&amp;lt;&amp;gt;(); map.put(&quot;sessionId&quot;, request.getSession().getId()); map.put(&quot;message&quot;, request.getSession().getAttribute(&quot;url&quot;)); map.put(&quot;port&quot;,port); return map; } } 测试 复制一份相同的代码，然后区分访问端口为8088和9090 访问：http://localhost:83/api/v1/first { port: &quot;9090&quot;, url: &quot;http://tomcat/api/v1/first&quot; } 多次访问：http://localhost:83/api/v1/sessions { port: &quot;9090&quot;, sessionId: &quot;2e35353c-4d9e-4588-8257-43b54da9adc7&quot;, message: &quot;http://tomcat/api/v1/first&quot; } { port: &quot;8088&quot;, sessionId: &quot;2e35353c-4d9e-4588-8257-43b54da9adc7&quot;, message: &quot;http://tomcat/api/v1/first&quot; } 虽然访问落到不同的服务下，但是每次获取的sessionId是相同的，即达到了session共享的目的。 目前缺点 目前nginx的配置，当一个服务挂掉的时候访问依然会落到这个服务商 目前的redis没有实现集群管理，当redis挂掉的时候，所有的session都将失效 参考资料 代码地址 http://www.cnblogs.com/mengmeng89012/p/5519698.html 可以参考github上的已有的集成方案https://github.com/jcoleman/tomcat-redis-session-manager</summary></entry><entry><title type="html">小觑Chrome Extension</title><link href="http://localhost:4000/%E5%89%8D%E7%AB%AF/2016/07/06/Chrome-Extension.html" rel="alternate" type="text/html" title="小觑Chrome Extension" /><published>2016-07-06T22:06:05+08:00</published><updated>2016-07-06T22:06:05+08:00</updated><id>http://localhost:4000/%E5%89%8D%E7%AB%AF/2016/07/06/Chrome-Extension</id><content type="html" xml:base="http://localhost:4000/%E5%89%8D%E7%AB%AF/2016/07/06/Chrome-Extension.html">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#为何不看看官方文档&quot; id=&quot;markdown-toc-为何不看看官方文档&quot;&gt;为何不看看官方文档？&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#我要做什么&quot; id=&quot;markdown-toc-我要做什么&quot;&gt;我要做什么？&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#文件组成&quot; id=&quot;markdown-toc-文件组成&quot;&gt;文件组成&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#基本文件组成&quot; id=&quot;markdown-toc-基本文件组成&quot;&gt;基本文件组成&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#manifestjson&quot; id=&quot;markdown-toc-manifestjson&quot;&gt;manifest.json&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#popuphtml&quot; id=&quot;markdown-toc-popuphtml&quot;&gt;popup.html&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#popupjs&quot; id=&quot;markdown-toc-popupjs&quot;&gt;popup.js&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#iconpng&quot; id=&quot;markdown-toc-iconpng&quot;&gt;icon.png&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#如何查看效果&quot; id=&quot;markdown-toc-如何查看效果&quot;&gt;如何查看效果？&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#问题总结&quot; id=&quot;markdown-toc-问题总结&quot;&gt;问题总结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最近一朋友问了一个关于Chrome Extension的问题，因为之前从来没有接触过，然后就自己看着文档动手写了一个简单的示例。Chrome Extension除了官方的一个API接口外，其他的就是一些html，css，js的知识了，如果很熟悉这些，写一个简单的自己的插件还是可以的。这里只是做了一个最简单的功能，毕竟我的前端功底不是太好，如果想有更加深入的了解，强烈建议读下&lt;a href=&quot;https://developer.chrome.com/extensions/getstarted&quot;&gt;Chrome的官方文档&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;为何不看看官方文档&quot;&gt;为何不看看官方文档？&lt;/h2&gt;
&lt;p&gt;　　&lt;a href=&quot;https://developer.chrome.com/extensions/getstarted&quot;&gt;Chrome的官方文档&lt;/a&gt;做的相当的赞。如果有梯子并且能看懂一点英文的话，下边的就没必要看了。&lt;/p&gt;

&lt;h2 id=&quot;我要做什么&quot;&gt;我要做什么？&lt;/h2&gt;
&lt;p&gt;　　实现的&lt;a href=&quot;https://github.com/MrDebuger/CommonCode/tree/master/js/ChromeExtensionDemo&quot;&gt;代码可以点击查看&lt;/a&gt;。如果没有一个自己想要的最终效果，那么做东西就会相当的没有动力。我要做的很简单，就是输入一个图片的url，然后点击加载，会在弹出的页面上加载出一张图片。最终实现的效果如下图所示：
&lt;a href=&quot;/&quot;&gt;&lt;img src=&quot;/images/Chrome-Extension-1.png&quot; alt=&quot;&quot; style=&quot;width: 100%px;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;文件组成&quot;&gt;文件组成&lt;/h2&gt;

&lt;h3 id=&quot;基本文件组成&quot;&gt;基本文件组成&lt;/h3&gt;

&lt;table boder=&quot;1px&quot; cellspacing=&quot;0px&quot; style=&quot;width:100%&quot;&gt;
	&lt;tr&gt;
		&lt;td&gt;文件名&lt;/td&gt;
		&lt;td&gt;作用&lt;/td&gt;
	&lt;/tr&gt;
  &lt;tr&gt;
		&lt;td&gt;manifest.json&lt;/td&gt;
		&lt;td&gt;一些配置选项&lt;/td&gt;
	&lt;/tr&gt;
  &lt;tr&gt;
		&lt;td&gt;icon.png&lt;/td&gt;
		&lt;td&gt;插件的图标，官方给出的是19px * 19px&lt;/td&gt;
	&lt;/tr&gt;
  &lt;tr&gt;
		&lt;td&gt;popup.html&lt;/td&gt;
		&lt;td&gt;弹出的主页面&lt;/td&gt;
	&lt;/tr&gt;
  &lt;tr&gt;
		&lt;td&gt;popup.js&lt;/td&gt;
		&lt;td&gt;外部js&lt;/td&gt;
	&lt;/tr&gt;
  &lt;/table&gt;

&lt;h3 id=&quot;manifestjson&quot;&gt;manifest.json&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;manifest_version:指定文件格式的版本，目前的默认为2就可以了。&lt;/li&gt;
  &lt;li&gt;下边的其他的参数配置应该就很容易明白了，当然还有一些其他的配置参数，可以根据自己的需要自行配置。&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;manifest_version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ChromeExtensionDemo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;My First Chrome Extension&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;browser_action&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;default_icon&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;icon.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;default_popup&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;popup.html&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;popuphtml&quot;&gt;popup.html&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;主页面，即点击弹出按钮后弹出的页面，这是一个标准的html页面，&lt;strong&gt;其中不能包含内联事件，所有的js代码最好写在外边&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;My First Chrome Extension&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&quot;Consolas&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;Segoe UI&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&quot;Lucida Grande&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Tahoma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sans-serif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;300px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;400px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;nf&quot;&gt;#status&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;white-space&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;text-overflow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ellipsis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;600px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;popup.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;margin-top:20px&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Please insert a image url:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;imgUrl&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;imgUrl&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width:100%&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Load Image!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;myImage&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;?&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;300&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;200&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;popupjs&quot;&gt;popup.js&lt;/h3&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clickHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;loadImg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loadImg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;imgUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;imgUrl&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;myImage&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;imgUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'DOMContentLoaded'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'button'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'click'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clickHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;iconpng&quot;&gt;icon.png&lt;/h3&gt;
&lt;p&gt;顾名思义，就是该插件的图标名。&lt;/p&gt;

&lt;h2 id=&quot;如何查看效果&quot;&gt;如何查看效果？&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;/&quot;&gt;&lt;img src=&quot;/images/Chrome-Extension-2.png&quot; alt=&quot;&quot; style=&quot;width: 100%px;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;问题总结&quot;&gt;问题总结&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;由于Chrome Extension&lt;strong&gt;不执行Inline JavaScript&lt;/strong&gt;，这说明同时禁止内嵌的&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;script&amp;gt;块和内联事件（例如： &amp;lt;button onclick=&quot;...&quot;&amp;gt;）&lt;/code&gt;,因此请不要在html中编写js代码。&lt;/li&gt;
  &lt;li&gt;代码一次写成的概率很小，因此如果出现错误可以尝试着进行&lt;a href=&quot;https://developer.chrome.com/extensions/tut_debugging&quot;&gt;debug&lt;/a&gt;一下。&lt;/li&gt;
  &lt;li&gt;出现问题后没必要直接就搜索，有时仔细的看一下错误信息也许会有收获。&lt;/li&gt;
&lt;/ul&gt;</content><author><name>imiem</name></author><category term="Chrome" /><category term="Extension" /><summary type="html">为何不看看官方文档？ 我要做什么？ 文件组成 基本文件组成 manifest.json popup.html popup.js icon.png 如何查看效果？ 问题总结 最近一朋友问了一个关于Chrome Extension的问题，因为之前从来没有接触过，然后就自己看着文档动手写了一个简单的示例。Chrome Extension除了官方的一个API接口外，其他的就是一些html，css，js的知识了，如果很熟悉这些，写一个简单的自己的插件还是可以的。这里只是做了一个最简单的功能，毕竟我的前端功底不是太好，如果想有更加深入的了解，强烈建议读下Chrome的官方文档。 为何不看看官方文档？ 　　Chrome的官方文档做的相当的赞。如果有梯子并且能看懂一点英文的话，下边的就没必要看了。 我要做什么？ 　　实现的代码可以点击查看。如果没有一个自己想要的最终效果，那么做东西就会相当的没有动力。我要做的很简单，就是输入一个图片的url，然后点击加载，会在弹出的页面上加载出一张图片。最终实现的效果如下图所示： 文件组成 基本文件组成 文件名 作用 manifest.json 一些配置选项 icon.png 插件的图标，官方给出的是19px * 19px popup.html 弹出的主页面 popup.js 外部js manifest.json manifest_version:指定文件格式的版本，目前的默认为2就可以了。 下边的其他的参数配置应该就很容易明白了，当然还有一些其他的配置参数，可以根据自己的需要自行配置。 { &quot;manifest_version&quot;:2, &quot;name&quot;:&quot;ChromeExtensionDemo&quot;, &quot;description&quot;:&quot;My First Chrome Extension&quot;, &quot;version&quot;:&quot;1.0&quot;, &quot;browser_action&quot;:{ &quot;default_icon&quot;:&quot;icon.png&quot;, &quot;default_popup&quot;:&quot;popup.html&quot; } } popup.html 主页面，即点击弹出按钮后弹出的页面，这是一个标准的html页面，其中不能包含内联事件，所有的js代码最好写在外边。 &amp;lt;!doctype html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;My First Chrome Extension&amp;lt;/title&amp;gt; &amp;lt;style&amp;gt; body { font-family: &quot;Consolas&quot;,&quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Tahoma, sans-serif; font-size: 100%; width: 300px; height: 400px; } #status { white-space: pre; text-overflow: ellipsis; overflow: hidden; max-width: 600px; } &amp;lt;/style&amp;gt; &amp;lt;script src=&quot;popup.js&quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div style=&quot;margin-top:20px&quot;&amp;gt; &amp;lt;label style=&quot;&quot;&amp;gt;Please insert a image url:&amp;lt;/label&amp;gt; &amp;lt;input type=&quot;text&quot; id=&quot;imgUrl&quot; name=&quot;imgUrl&quot; style=&quot;width:100%&quot;/&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div&amp;gt; &amp;lt;button&amp;gt;Load Image!&amp;lt;/button&amp;gt; &amp;lt;img id=&quot;myImage&quot; src=&quot;?&quot; width=&quot;300&quot; height=&quot;200&quot; /&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; popup.js function clickHandler(element) { loadImg(); } function loadImg(){ var imgUrl = document.getElementById(&quot;imgUrl&quot;).value; document.getElementById(&quot;myImage&quot;).src = imgUrl; } document.addEventListener('DOMContentLoaded', function () { document.querySelector('button').addEventListener('click', clickHandler); }); icon.png 顾名思义，就是该插件的图标名。 如何查看效果？ 问题总结 由于Chrome Extension不执行Inline JavaScript，这说明同时禁止内嵌的&amp;lt;script&amp;gt;块和内联事件（例如： &amp;lt;button onclick=&quot;...&quot;&amp;gt;）,因此请不要在html中编写js代码。 代码一次写成的概率很小，因此如果出现错误可以尝试着进行debug一下。 出现问题后没必要直接就搜索，有时仔细的看一下错误信息也许会有收获。</summary></entry><entry><title type="html">Java Tips</title><link href="http://localhost:4000/%E6%9E%B6%E6%9E%84/2016/06/18/Java-Userful-Word.html" rel="alternate" type="text/html" title="Java Tips" /><published>2016-06-18T18:06:05+08:00</published><updated>2016-06-18T18:06:05+08:00</updated><id>http://localhost:4000/%E6%9E%B6%E6%9E%84/2016/06/18/Java-Userful-Word</id><content type="html" xml:base="http://localhost:4000/%E6%9E%B6%E6%9E%84/2016/06/18/Java-Userful-Word.html">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#tips&quot; id=&quot;markdown-toc-tips&quot;&gt;tips&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
  &lt;p&gt;纸上得来终觉浅，绝知此事要躬行。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;tips&quot;&gt;tips&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;面向对象的精髓是&lt;strong&gt;模拟现实&lt;/strong&gt;，需要多从现实中考虑面向对象的东西。&lt;/li&gt;
  &lt;li&gt;抽象类和接口的区别在于使用动机，使用&lt;strong&gt;抽象类是为了复用，使用接口是为了实现多态&lt;/strong&gt;。&lt;strong&gt;接口和他的子类应该是一般和特殊的关系，而接口仅仅是它的之类应该实现的一组规则&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;</content><author><name>imiem</name></author><category term="Tips" /><summary type="html">tips 纸上得来终觉浅，绝知此事要躬行。 tips 面向对象的精髓是模拟现实，需要多从现实中考虑面向对象的东西。 抽象类和接口的区别在于使用动机，使用抽象类是为了复用，使用接口是为了实现多态。接口和他的子类应该是一般和特殊的关系，而接口仅仅是它的之类应该实现的一组规则。</summary></entry><entry><title type="html">final关键字</title><link href="http://localhost:4000/java/2016/06/06/Java-Final.html" rel="alternate" type="text/html" title="final关键字" /><published>2016-06-06T22:06:05+08:00</published><updated>2016-06-06T22:06:05+08:00</updated><id>http://localhost:4000/java/2016/06/06/Java-Final</id><content type="html" xml:base="http://localhost:4000/java/2016/06/06/Java-Final.html">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#final变量&quot; id=&quot;markdown-toc-final变量&quot;&gt;final变量&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#final方法&quot; id=&quot;markdown-toc-final方法&quot;&gt;final方法&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#final类&quot; id=&quot;markdown-toc-final类&quot;&gt;final类&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#final关键字的好处&quot; id=&quot;markdown-toc-final关键字的好处&quot;&gt;final关键字的好处？&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#关键点&quot; id=&quot;markdown-toc-关键点&quot;&gt;关键点&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;根据上下文，final的含义有细微的差别，但通常它指的是&lt;strong&gt;“这是无法改变的”&lt;/strong&gt;。不想做出改变可能出于两种理由：&lt;strong&gt;设计和效率&lt;/strong&gt;。 final一般用于三种情况：变量、方法和类。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;final变量&quot;&gt;final变量&lt;/h2&gt;
&lt;p&gt;凡是对成员变量和本地变量（在方法中和代码块中的变量）声明为final的都称为final变量，final变量经常和static关键字一块使用，作为常量。&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DEL_FLAG_NORMAL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DEL_FLAG_DELETE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DEL_FLAG_AUDIT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;final方法&quot;&gt;final方法&lt;/h2&gt;
&lt;p&gt;final也可以声明方法。方法前面加上final关键字，代表这个方法不可以被子类的方法重写。如果你认为一个方法的功能已经&lt;strong&gt;足够完整&lt;/strong&gt;了，子类中不需要改变的话，你可以声明此方法为final。final方法比非final方法要快，因为在编译的时候已经静态绑定了，不需要在运行时再动态绑定。&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Person&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Man&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 编译错误&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Man&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;final类&quot;&gt;final类&lt;/h2&gt;
&lt;p&gt;使用final来修饰的类叫作final类。final类通常功能是完整的，它们不能被继承。Java中有许多类是final的，譬如String, Interger以及其他包装类。&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 编译错误&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Man&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;final关键字的好处&quot;&gt;final关键字的好处？&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;提高性能，JVM和Java应用都会缓存final变量。&lt;/li&gt;
  &lt;li&gt;final变量在多线程下可以安全的进行共享，而不需要额外的同步开销。&lt;/li&gt;
  &lt;li&gt;final关键字，JVM会对方法，变量和类方法进行优化。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;关键点&quot;&gt;关键点&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;一个既是static又是final的域只占据一段不能改变的存储空间。&lt;/li&gt;
  &lt;li&gt;对于基本类型，final使数值恒定不变；对于对象引用，final使引用恒定不变。一旦引用被final初始化执行一个对象，就无法再把它指向另一个对象。然而，对象本身是可以改变的，Java并未提供任何使对象恒定不变的途径（可以自己编写类以实现对象恒定不变的效果）。&lt;/li&gt;
  &lt;li&gt;根据惯例，&lt;strong&gt;既是static又是final&lt;/strong&gt;的域（编译期常量）将用大写表示，并使用下划线分割各个单词。&lt;/li&gt;
  &lt;li&gt;Java允许在参数列表中以声明的方式将参数指明为final，这意味着无法在方法中更改参数引用所指向的对象。&lt;/li&gt;
  &lt;li&gt;类中所有的private方法都隐式的指定为是final的。&lt;/li&gt;
  &lt;li&gt;类声明为final时，表明了你不打算继承该类，而且也不允许别人这样做。由于final类禁止继承，所以final类中所有的方法都隐式指定为final。&lt;/li&gt;
&lt;/ul&gt;</content><author><name>imiem</name></author><category term="Java" /><category term="final" /><category term="关键字" /><summary type="html">final变量 final方法 final类 final关键字的好处？ 关键点 根据上下文，final的含义有细微的差别，但通常它指的是“这是无法改变的”。不想做出改变可能出于两种理由：设计和效率。 final一般用于三种情况：变量、方法和类。 final变量 凡是对成员变量和本地变量（在方法中和代码块中的变量）声明为final的都称为final变量，final变量经常和static关键字一块使用，作为常量。 public static final String DEL_FLAG_NORMAL = &quot;0&quot;; public static final String DEL_FLAG_DELETE = &quot;1&quot;; public static final String DEL_FLAG_AUDIT = &quot;2&quot;; final方法 final也可以声明方法。方法前面加上final关键字，代表这个方法不可以被子类的方法重写。如果你认为一个方法的功能已经足够完整了，子类中不需要改变的话，你可以声明此方法为final。final方法比非final方法要快，因为在编译的时候已经静态绑定了，不需要在运行时再动态绑定。 class Person { public final String getName() { return &quot;Person&quot;; } } class Man extends Person{ @Override // 编译错误 public String getName() { return &quot;Man&quot;; } } final类 使用final来修饰的类叫作final类。final类通常功能是完整的，它们不能被继承。Java中有许多类是final的，譬如String, Interger以及其他包装类。 final class Person {} // 编译错误 class Man extends Person {} final关键字的好处？ 提高性能，JVM和Java应用都会缓存final变量。 final变量在多线程下可以安全的进行共享，而不需要额外的同步开销。 final关键字，JVM会对方法，变量和类方法进行优化。 关键点 一个既是static又是final的域只占据一段不能改变的存储空间。 对于基本类型，final使数值恒定不变；对于对象引用，final使引用恒定不变。一旦引用被final初始化执行一个对象，就无法再把它指向另一个对象。然而，对象本身是可以改变的，Java并未提供任何使对象恒定不变的途径（可以自己编写类以实现对象恒定不变的效果）。 根据惯例，既是static又是final的域（编译期常量）将用大写表示，并使用下划线分割各个单词。 Java允许在参数列表中以声明的方式将参数指明为final，这意味着无法在方法中更改参数引用所指向的对象。 类中所有的private方法都隐式的指定为是final的。 类声明为final时，表明了你不打算继承该类，而且也不允许别人这样做。由于final类禁止继承，所以final类中所有的方法都隐式指定为final。</summary></entry><entry><title type="html">Java 中的 enum</title><link href="http://localhost:4000/java/2016/05/20/Java-enum.html" rel="alternate" type="text/html" title="Java 中的 enum" /><published>2016-05-20T22:06:05+08:00</published><updated>2016-05-20T22:06:05+08:00</updated><id>http://localhost:4000/java/2016/05/20/Java-enum</id><content type="html" xml:base="http://localhost:4000/java/2016/05/20/Java-enum.html">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#为什么使用枚举&quot; id=&quot;markdown-toc-为什么使用枚举&quot;&gt;为什么使用枚举？&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#增加代码的可读性&quot; id=&quot;markdown-toc-增加代码的可读性&quot;&gt;增加代码的可读性&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;枚举可以理解为有&lt;strong&gt;相似类型&lt;/strong&gt;的“数据集”,并且&lt;strong&gt;数值稳定&lt;/strong&gt;，&lt;strong&gt;数据集有限&lt;/strong&gt;。&lt;/p&gt;

&lt;h2 id=&quot;为什么使用枚举&quot;&gt;为什么使用枚举？&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;public static final&lt;/code&gt; VS &lt;code class=&quot;highlighter-rouge&quot;&gt;enum&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;增加代码的可读性&quot;&gt;增加代码的可读性&lt;/h2&gt;</content><author><name>imiem</name></author><category term="Java" /><category term="enum" /><summary type="html">为什么使用枚举？ 增加代码的可读性 枚举可以理解为有相似类型的“数据集”,并且数值稳定，数据集有限。 为什么使用枚举？ public static final VS enum 增加代码的可读性</summary></entry><entry><title type="html">Java的垃圾回收机制</title><link href="http://localhost:4000/java/2016/05/20/Java-Garbage-Collection.html" rel="alternate" type="text/html" title="Java的垃圾回收机制" /><published>2016-05-20T18:06:05+08:00</published><updated>2016-05-20T18:06:05+08:00</updated><id>http://localhost:4000/java/2016/05/20/Java-Garbage-Collection</id><content type="html" xml:base="http://localhost:4000/java/2016/05/20/Java-Garbage-Collection.html">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#什么是垃圾回收机制&quot; id=&quot;markdown-toc-什么是垃圾回收机制&quot;&gt;什么是垃圾回收机制？&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#垃圾回收策略&quot; id=&quot;markdown-toc-垃圾回收策略&quot;&gt;垃圾回收策略&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#常用的垃圾回收算法&quot; id=&quot;markdown-toc-常用的垃圾回收算法&quot;&gt;常用的垃圾回收算法&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#什么是内存泄漏&quot; id=&quot;markdown-toc-什么是内存泄漏&quot;&gt;什么是内存泄漏？&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#参考&quot; id=&quot;markdown-toc-参考&quot;&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;垃圾回收机制（GC）。在以前所用过的程序语言中，在堆上分配对象的代价十分高昂，因此会认为Java中所有对象（基本类型除外）都在堆上分配的方式也十分高昂。然而，&lt;strong&gt;垃圾回收器对于提高对象的创建速度，却有明显的效果&lt;/strong&gt;。听起来很奇怪–存储空间的释放竟然影响存储空间的分配，但这确实是某些Java虚拟机的工作方式。这也意味着，Java从堆分配空间的速度，可以和其他语言从堆栈上分配空间的速度相媲美。–from Thinking in Java(Java编程思想)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;什么是垃圾回收机制&quot;&gt;什么是垃圾回收机制？&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Java的垃圾回收机制是Java虚拟机提供的，一般是在空闲时间以不定时的方式动态回收&lt;strong&gt;无任何引用的对象&lt;/strong&gt;占据的空间。&lt;/li&gt;
  &lt;li&gt;回收的是&lt;strong&gt;无任何引用的对象占据的内存空间而不是对象本身&lt;/strong&gt;。&lt;/li&gt;
  &lt;li&gt;具体的垃圾回收操作是不可预料的，不能人为的干预。&lt;/li&gt;
  &lt;li&gt;gc()可以建议虚拟机进行垃圾回收，&lt;em&gt;但是虚拟机不一定接受你的建议&lt;/em&gt;。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;垃圾回收策略&quot;&gt;垃圾回收策略&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;引用计数收集器
    &lt;ul&gt;
      &lt;li&gt;引用计数是垃圾回收器的早期策略，对于堆中的对象都有一个引用计数。当一个对象被创建时，该对象会被分配给一个初始值为1的变量，当任何其他的变量被赋值为该对象的引用时，引用计数+1，当一个对象的某个引用超过了声明周期或被设置为一个新值时，对象的引用计数-1。当引用计数为0时，垃圾回收器会在适当的时候进行垃圾回收。&lt;/li&gt;
      &lt;li&gt;缺点：当父对象和子对象互相引用时，就会造成循环引用。&lt;/li&gt;
      &lt;li&gt;优点：引用计数器可以很快的执行，对程序不被长时间打断的实时环境比较有利。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;跟踪收集器
    &lt;ul&gt;
      &lt;li&gt;现在大多数的JVM采用对象引用遍历，对象引用从一组对象开始，沿着整个对象图上的链接，确定可以递归到达的对象，如果某个对象不能从这些根对象的至少一个到达（即没有被任何对象引用），则会被当作垃圾进行回收。&lt;/li&gt;
      &lt;li&gt;GC删除对象时，有些GC只是简单的扫描堆栈，删除未标记的对象，并释放他们的内存以生成新的对象，这叫做清除。不过这样会把内存分为好多小段，这些内存段虽然不足以存储新的对象，但是组合起来却很大。因此，许多的GC可以重新组织内存中的对象，并进行压缩，形成可以利用的空间。&lt;/li&gt;
    &lt;/ul&gt;

    &lt;h2 id=&quot;常用的垃圾回收算法&quot;&gt;常用的垃圾回收算法&lt;/h2&gt;
    &lt;p&gt;&lt;em&gt;垃圾回收算法无外乎是时间和空间的置换，如何选择具体的垃圾回收算法，应该取决于一个“中庸之道”，当然，Java的垃圾回收机制也不一定是最完美的。随着Java虚拟机的发展，垃圾回收机制也在不断的进行适应和完善。况且，不同的JVM采用的垃圾回收算法也有可能是不同的。&lt;/em&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Mark-Sweep（标记-清除）算法
    &lt;blockquote&gt;
      &lt;p&gt;最容易实现和理解的一种算法。垃圾的回收主要分为两个阶段：标记阶段和清除阶段。&lt;/p&gt;
    &lt;/blockquote&gt;
    &lt;ul&gt;
      &lt;li&gt;标记阶段的任务就是标记出所有的被回收的对象。&lt;/li&gt;
      &lt;li&gt;清除阶段就是回收被标记的对象所占的内存空间。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Copying（复制）算法&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Mark-Compact（标记-整理）算法&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Generational Collection（分代收集）算法&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;什么是内存泄漏&quot;&gt;什么是内存泄漏？&lt;/h2&gt;
&lt;p&gt;内存泄漏简单来说就是内存使用完毕后未回收。&lt;/p&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Thinking in Java&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/ywl925/p/3925637.html&quot;&gt;http://www.cnblogs.com/ywl925/p/3925637.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.open-open.com/lib/view/open1418695621542.html&quot;&gt;http://www.open-open.com/lib/view/open1418695621542.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>imiem</name></author><category term="Java" /><category term="垃圾回收机制" /><category term="GC" /><summary type="html">什么是垃圾回收机制？ 垃圾回收策略 常用的垃圾回收算法 什么是内存泄漏？ 参考 垃圾回收机制（GC）。在以前所用过的程序语言中，在堆上分配对象的代价十分高昂，因此会认为Java中所有对象（基本类型除外）都在堆上分配的方式也十分高昂。然而，垃圾回收器对于提高对象的创建速度，却有明显的效果。听起来很奇怪–存储空间的释放竟然影响存储空间的分配，但这确实是某些Java虚拟机的工作方式。这也意味着，Java从堆分配空间的速度，可以和其他语言从堆栈上分配空间的速度相媲美。–from Thinking in Java(Java编程思想) 什么是垃圾回收机制？ Java的垃圾回收机制是Java虚拟机提供的，一般是在空闲时间以不定时的方式动态回收无任何引用的对象占据的空间。 回收的是无任何引用的对象占据的内存空间而不是对象本身。 具体的垃圾回收操作是不可预料的，不能人为的干预。 gc()可以建议虚拟机进行垃圾回收，但是虚拟机不一定接受你的建议。 垃圾回收策略 引用计数收集器 引用计数是垃圾回收器的早期策略，对于堆中的对象都有一个引用计数。当一个对象被创建时，该对象会被分配给一个初始值为1的变量，当任何其他的变量被赋值为该对象的引用时，引用计数+1，当一个对象的某个引用超过了声明周期或被设置为一个新值时，对象的引用计数-1。当引用计数为0时，垃圾回收器会在适当的时候进行垃圾回收。 缺点：当父对象和子对象互相引用时，就会造成循环引用。 优点：引用计数器可以很快的执行，对程序不被长时间打断的实时环境比较有利。 跟踪收集器 现在大多数的JVM采用对象引用遍历，对象引用从一组对象开始，沿着整个对象图上的链接，确定可以递归到达的对象，如果某个对象不能从这些根对象的至少一个到达（即没有被任何对象引用），则会被当作垃圾进行回收。 GC删除对象时，有些GC只是简单的扫描堆栈，删除未标记的对象，并释放他们的内存以生成新的对象，这叫做清除。不过这样会把内存分为好多小段，这些内存段虽然不足以存储新的对象，但是组合起来却很大。因此，许多的GC可以重新组织内存中的对象，并进行压缩，形成可以利用的空间。 常用的垃圾回收算法 垃圾回收算法无外乎是时间和空间的置换，如何选择具体的垃圾回收算法，应该取决于一个“中庸之道”，当然，Java的垃圾回收机制也不一定是最完美的。随着Java虚拟机的发展，垃圾回收机制也在不断的进行适应和完善。况且，不同的JVM采用的垃圾回收算法也有可能是不同的。 Mark-Sweep（标记-清除）算法 最容易实现和理解的一种算法。垃圾的回收主要分为两个阶段：标记阶段和清除阶段。 标记阶段的任务就是标记出所有的被回收的对象。 清除阶段就是回收被标记的对象所占的内存空间。 Copying（复制）算法 Mark-Compact（标记-整理）算法 Generational Collection（分代收集）算法 什么是内存泄漏？ 内存泄漏简单来说就是内存使用完毕后未回收。 参考 Thinking in Java http://www.cnblogs.com/ywl925/p/3925637.html http://www.open-open.com/lib/view/open1418695621542.html</summary></entry><entry><title type="html">Java 中的 单例</title><link href="http://localhost:4000/java/2016/04/03/Java-Singleton.html" rel="alternate" type="text/html" title="Java 中的 单例" /><published>2016-04-03T22:06:05+08:00</published><updated>2016-04-03T22:06:05+08:00</updated><id>http://localhost:4000/java/2016/04/03/Java-Singleton</id><content type="html" xml:base="http://localhost:4000/java/2016/04/03/Java-Singleton.html">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#单例的三种简单方式&quot; id=&quot;markdown-toc-单例的三种简单方式&quot;&gt;单例的三种简单方式&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#方式一&quot; id=&quot;markdown-toc-方式一&quot;&gt;方式一：&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#方法二&quot; id=&quot;markdown-toc-方法二&quot;&gt;方法二：&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#方法三&quot; id=&quot;markdown-toc-方法三&quot;&gt;方法三：&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;本文中的例子来自Effective Java&lt;/p&gt;

&lt;h2 id=&quot;单例的三种简单方式&quot;&gt;单例的三种简单方式&lt;/h2&gt;

&lt;h3 id=&quot;方式一&quot;&gt;方式一：&lt;/h3&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Elvis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;Elvis&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INSTANCE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Elvis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Elvis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;方法二&quot;&gt;方法二：&lt;/h3&gt;
&lt;p&gt;公有的成员是个静态成员方法：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Elvis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Elvis&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INSTANCE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Elvis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Elvis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Elvis&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INSTANCE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;方法三&quot;&gt;方法三：&lt;/h3&gt;
&lt;p&gt;绝对防止多次实例化，即使是在面对复杂的序列化或者反射攻击的时候。&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Elvis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;INSTANCE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>imiem</name></author><category term="Java" /><category term="Singleton" /><summary type="html">单例的三种简单方式 方式一： 方法二： 方法三： 本文中的例子来自Effective Java 单例的三种简单方式 方式一： public class Elvis { public static final Elvis INSTANCE = new Elvis(); private Elvis(){ // } } 方法二： 公有的成员是个静态成员方法： public class Elvis { private static final Elvis INSTANCE = new Elvis(); private Elvis() { } public static Elvis getInstance() { return INSTANCE; } } 方法三： 绝对防止多次实例化，即使是在面对复杂的序列化或者反射攻击的时候。 public enum Elvis { INSTANCE; }</summary></entry></feed>